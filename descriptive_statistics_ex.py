# -*- coding: utf-8 -*-
"""Descriptive_Statistics_jupyterlite.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rk3aqKHzAVLxftTdFrk-ymEkET3NA-Ff

<p style="text-align:center">
    <a href="https://skills.network/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkST0151ENSkillsNetwork20531532-2022-01-01" target="_blank">
    <img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/assets/logos/SN_web_lightmode.png" width="200" alt="Skills Network Logo">
    </a>
</p>

# Descriptive Statistics

Estimated time needed: **30** minutes

In this lab, you'll go over some hands-on exercises using Python.

## Objectives

*   Import Libraries
*   Read in Data
*   Lab exercises and questions

***

## Import Libraries

All Libraries required for this lab are listed below. The libraries pre-installed on Skills Network Labs are commented. If you run this notebook in a different environment, e.g. your desktop, you may need to uncomment and install certain libraries.

Import the libraries we need for the lab
"""

import piplite
await piplite.install(['numpy'],['pandas'])

import numpy as np
import pandas as pd
import matplotlib.pyplot as pyplot

from js import fetch
import io

URL = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ST0151EN-SkillsNetwork/labs/teachingratings.csv'
resp = await fetch(URL)
ratings_url = io.BytesIO((await resp.arrayBuffer()).to_py())

"""Read in the csv file from the URL using the request library

"""

ratings_df=pd.read_csv(ratings_url)

"""## Data Description

| Variable    | Description                                                                                                                                          |
| ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- |
| minority    | Does the instructor belong to a minority (non-Caucasian) group?                                                                                      |
| age         | The professor's age                                                                                                                                  |
| gender      | Indicating whether the instructor was male or female.                                                                                                |
| credits     | Is the course a single-credit elective?                                                                                                              |
| beauty      | Rating of the instructor's physical appearance by a panel of six students averaged across the six panelists and standardized to have a mean of zero. |
| eval        | Course overall teaching evaluation score, on a scale of 1 (very unsatisfactory) to 5 (excellent).                                                    |
| division    | Is the course an upper or lower division course?                                                                                                     |
| native      | Is the instructor a native English speaker?                                                                                                          |
| tenure      | Is the instructor on a tenure track?                                                                                                                 |
| students    | Number of students that participated in the evaluation.                                                                                              |
| allstudents | Number of students enrolled in the course.                                                                                                           |
| prof        | Indicating instructor identifier.                                                                                                                    |

## Display information about the dataset

1.  Structure of the dataframe
2.  Describe the dataset
3.  Number of rows and columns

print out the first five rows of the data
"""

ratings_df.head()

"""get information about each variable

"""

ratings_df.info()

"""get the number of rows and columns - prints as (number of rows, number of columns)

"""

ratings_df.shape

"""## Lab Exercises

### Can you identify whether the teachers' Rating data is a time series or cross-sectional?

Print out the first ten rows of the data

1.  Does it have a date or time variable? - No - it is not a time series dataset
2.  Does it observe more than one teacher being rated? - Yes - it is cross-sectional dataset

> The dataset is a Cross-sectional
"""

ratings_df.head(10)

"""### Find the mean, median, minimum, and maximum values for students

Find Mean value for students
"""

ratings_df['students'].mean()

"""Find the Median value for students

"""

ratings_df['students'].median()

"""Find the Minimum value for students

"""

ratings_df['students'].min()

"""Find the Maximum value for students

"""

ratings_df['students'].max()

"""### Produce a descriptive statistics table

"""

ratings_df.describe()

"""### Create a histogram of the beauty variable and briefly comment on the distribution of data

using the <code>matplotlib</code> library, create a histogram
"""

pyplot.hist(ratings_df['beauty'])

"""here are few conclusions from the histogram
most of the data for beauty is around the -0.5 and 0
the distribution is skewed to the right
therefore looking at the data we can say the mean is close to 0

### Does average beauty score differ by gender? Produce the means and standard deviations for both male and female instructors.

Use a group by gender to view the mean scores of the beauty we can say that beauty scores differ by gender as the mean beauty score for women is higher than men
"""

ratings_df.groupby('gender').agg({'beauty':['mean', 'std', 'var']}).reset_index()

"""### Calculate the percentage of males and females that are tenured professors. Will you say that tenure status differ by gender?

First groupby to get the total sum
"""

ratings_df=ratings_df[ratings_df['tenure'] == 'yes']

tenure_count = ratings_df.groupby('gender').agg({'tenure': 'count'}).reset_index()

"""Find the percentage

"""

tenure_count['percentage'] = 100 * tenure_count.tenure/tenure_count.tenure.sum()
tenure_count

"""## Practice Questions

### Question 1: Calculate the percentage of visible minorities are tenure professors. Will you say that tenure status differed if teacher was a visible minority?
"""

ratings_df=ratings_df[ratings_df['tenure']=='yes']

tenure_count = ratings_df.groupby('minority').agg({'tenure': 'count'}).reset_index()
# Find the percentage
tenure_count['percentage'] = 100 * tenure_count.tenure/tenure_count.tenure.sum()

tenure_count

"""Double-click **here** for the solution.

<!-- The answer is below:
##First filter for the tenured Professors
ratings_df=ratings_df[ratings_df['tenure']=='yes']
### we can use a groupby function for this
## first groupby to get the total sum
tenure_count = ratings_df.groupby('minority').agg({'tenure': 'count'}).reset_index()
# Find the percentage
tenure_count['percentage'] = 100 * tenure_count.tenure/tenure_count.tenure.sum()
##print to see
tenure_count
-->

### Question 2: Does average age differ by tenure? Produce the means and standard deviations for both tenured and untenured professors.
"""

ratings_df.groupby('tenure').agg({'age':['mean', 'std', 'var']}).reset_index()

"""Double-click **here** for the solution.

<!-- The answer is below:
## group by tenureship and find the mean and standard deviation for each group
ratings_df.groupby('tenure').agg({'age':['mean', 'std']}).reset_index()
-->

### Question 3: Create a histogram for the age variable.
"""

pyplot.hist(ratings_df['age'])

"""Double-click **here** for the solution.

<!-- The answer is below:
pyplot.hist(ratings_df['age'])
-->

### Question 4: Create a bar plot for the gender variable.
"""

sorted_counts = ratings_df.gender.value_counts().sort_index()

pyplot.barh(sorted_counts.index, sorted_counts.values, color=['pink', 'blue'])

pyplot.xlabel("Gender")
pyplot.ylabel("Count")
pyplot.title("Bar plot by gender")
pyplot.show()

''''

pyplot.bar(sorted_counts.index, sorted_counts.values, color ='blue',
        width = 0.4)

pyplot.xlabel("Gender")
pyplot.ylabel("Count")
pyplot.title("Bar plot by gender")
pyplot.show()

sorted_counts = ratings_df.gender.value_counts().sort_index()
''''

"""Double-click **here** for the solution.

<!-- The answer is below:
# Sort the value counts by index to align with the unique gender labels
sorted_counts = ratings_df.gender.value_counts().sort_index()

# Create the bar plot with sorted values
pyplot.bar(sorted_counts.index, sorted_counts.values, color=['pink', 'blue'])

# Add labels and title
pyplot.xlabel('Gender')
pyplot.ylabel('Count')
pyplot.title('Gender distribution bar plot')
-->

> Note:Bar plot can be rendered vertically or horizontally. Try to replace **pyplot.bar** with **pyplot.barh** in the above cell and see the difference.

### Question 5: What is the Median evaluation score for tenured Professors?
"""

ratings_df[ratings_df['tenure'] == 'yes']['eval'].median()

"""Double-click **here** for the solution.

<!-- The answer is below:
## you can index just tenured professors and find their median evaluation scores
ratings_df[ratings_df['tenure'] == 'yes']['eval'].median()
-->

"""